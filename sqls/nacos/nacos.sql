/*
 Navicat Premium Data Transfer

 Source Server         : 本地环境-点九先生-127.0.0.1
 Source Server Type    : MySQL
 Source Server Version : 80032 (8.0.32)
 Source Host           : localhost:3306
 Source Schema         : nacos

 Target Server Type    : MySQL
 Target Server Version : 80032 (8.0.32)
 File Encoding         : 65001

 Date: 28/02/2023 17:46:54
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin,
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '秘钥',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `uk_configinfo_datagrouptenant` (`data_id`,`group_id`,`tenant_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=204 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin ROW_FORMAT=DYNAMIC COMMENT='config_info';

-- ----------------------------
-- Records of config_info
-- ----------------------------
BEGIN;
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (14, 'application-dev.yaml', 'dev', '# 服务端口号\nserver:\n  undertow:\n    accesslog:\n      # Undertow 日志存放目录\n      dir: logs\n      # 是否启动日志\n      enabled: false\n      # 日志格式\n      pattern: common\n      # 日志文件名前缀\n      prefix: access_log\n      # 日志文件名后缀\n      suffix: log\n    # HTTP POST请求最大的大小\n    # max-http-post-size: 0\n    threads:\n      io: 8\n      worker: 64\n    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\n    #io-threads: 16\n    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程\n    # 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8\n    #worker-threads: 256\n    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理\n    # 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可\n    buffer-size: 1024\n    # 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region\n    # buffers-per-region: 1024\n    # 是否分配的直接内存\n    direct-buffers: true\n\n# mybatis-plus\nmybatis-plus:\n  configuration:\n    #控制台打印完整带参数SQL语句\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  #mapper映射文件路径\n  mapper-locations: classpath:/mapper/**.xml\n\n#pagehelper\npagehelper:\n  helper-dialect: mysql\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\n  auto-runtime-dialect: true\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\n  reasonable: true\n  #支持通过Mapper接口参数传递page参数,默认值为false\n  support-methods-arguments: true\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\n  page-size-zero: true\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\n  params: count=countSql\n\n# feign\nfeign:\n  okhttp:\n    enabled: true\n  sentinel:\n    enabled: true\n  client:\n    config:\n      default:\n        connectTimeout: 100000\n        readTimeout: 100000\n\n# knife4j配置\nknife4j:\n  #启用\n  enable: true\n  #基础认证\n  basic:\n    enable: false\n    username: scm\n    password: 123456\n  #增强配置\n  setting:\n    enableSwaggerModels: true\n    enableDocumentManage: true\n    enableHost: false\n    enableHostText: http://localhost\n    enableRequestCache: true\n    enableFilterMultipartApis: false\n    enableFilterMultipartApiMethodType: POST\n    language: zh-CN\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Copyright © 2021 SCM All Rights Reserved\n\n# 定义日志类型\nlogback:\n  fileType: log', '3f2790bc0d6a6fb704e4ccded24ed4e2', '2022-08-14 13:29:20', '2022-08-14 13:29:20', NULL, '10.42.47.147', '', '0a69b576-2805-416a-a7f3-db4e7092d954', '', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (15, 'scheduling-web-dev.yaml', 'dev', 'spring:\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://10.48.168.199:3306/scm-test?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Hongkong&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    validation-query: SELECT 1 FROM DUAL\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 10.48.168.199\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://10.48.168.199:9000\n  #账户\n  accessKey: admin\n  #密码\n  secretKey: shanjin2021\n  #存储桶\n  bucketName: scm-test\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 10.88.94.43\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user: SJ01_ADMIN\n    # SAP密码\n    passwd: shshjin2021\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n#  logDir: /Users/markeloff/logs/scm-scheduling\n  logDir: /app/logs/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: debug\n    com.alibaba.cloud: debug\n    # undertow\n    io.undertow: debug\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '2a1303a71b59e66c52b8df08148a96ed', '2022-08-14 13:29:31', '2022-08-14 13:29:31', NULL, '10.42.47.147', '', '0a69b576-2805-416a-a7f3-db4e7092d954', '', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (47, 'application-local.yaml', 'local', '# 服务端口号\r\nserver:\r\n  # tomcat 配置\r\n  tomcat:\r\n    # tomcat的URI编码\r\n    uri-encoding: UTF-8\r\n    # tomcat最大线程数，默认为200\r\n    max-threads: 500\r\n    # Tomcat启动初始化的线程数，默认值25\r\n    min-spare-threads: 30\r\n\r\n# mybatis-plus\r\nmybatis-plus:\r\n  configuration:\r\n    #控制台打印完整带参数SQL语句\r\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\r\n  #mapper映射文件路径\r\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\r\n\r\n#pagehelper\r\npagehelper:\r\n  # helper-dialect: mysql\r\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\r\n  auto-runtime-dialect: true\r\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\r\n  reasonable: true\r\n  #支持通过Mapper接口参数传递page参数,默认值为false\r\n  support-methods-arguments: true\r\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\r\n  page-size-zero: true\r\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\r\n  params: count=countSql\r\n\r\n# feign\r\nfeign:\r\n  okhttp:\r\n    enabled: true\r\n  sentinel:\r\n    enabled: true\r\n  client:\r\n    config:\r\n      default:\r\n        connectTimeout: 100000\r\n        readTimeout: 100000\r\n\r\n# knife4j配置\r\nknife4j:\r\n  #启用\r\n  enable: true\r\n  #基础认证\r\n  basic:\r\n    enable: false\r\n    username: startdis\r\n    password: 123456\r\n  #增强配置\r\n  setting:\r\n    enableSwaggerModels: true\r\n    enableDocumentManage: true\r\n    enableHost: false\r\n    enableHostText: http://localhost\r\n    enableRequestCache: true\r\n    enableFilterMultipartApis: false\r\n    enableFilterMultipartApiMethodType: POST\r\n    language: zh-CN\r\n    enableFooter: false\r\n    enableFooterCustom: true\r\n    footerCustomContent: Copyright © 2021 Startdis All Rights Reserved\r\n\r\n# 定义日志类型\r\nlogback:\r\n  fileType: log\r\n\r\nspring:\r\n    # 循环依赖的问题\r\n  main:\r\n    allow-circular-references: true\r\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\r\n  mvc:\r\n    pathmatch:\r\n      matching-strategy: ANT_PATH_MATCHER', 'd37b051d1870895f0cb68e3d1167ba33', '2022-11-03 11:10:42', '2022-11-03 11:10:42', NULL, '112.0.62.28', 'sys', 'local', '系统管理', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (48, 'sys-web-local.yaml', 'local', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # mysql\n    # url: jdbc:mysql://1.13.24.182:3306/startdis-saas-sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    # driver-class-name: com.mysql.cj.jdbc.Driver\n    # username: root\n    # password: 123456\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/startdis_saas_sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-saas/sys-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '14633217d5729ece2a9745f489634fb0', '2022-11-03 11:13:12', '2022-12-14 10:42:26', 'nacos', '112.0.61.56', 'sys', 'local', '系统管理', '', '', 'yaml', '', '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (49, 'cms-web-local.yaml', 'local', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # mysql\n    # url: jdbc:mysql://1.13.24.182:3306/startdis-saas-cms?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    # driver-class-name: com.mysql.cj.jdbc.Driver\n    # username: root\n    # password: 123456\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/startdis_saas_cms?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-dev\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis-saas/cms-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '1c0c20626c927fa46997dc59db51ad5f', '2022-11-03 14:51:37', '2022-11-30 13:34:45', 'nacos', '112.0.62.141', 'cms', 'local', '内容管理', '', '', 'yaml', '', '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (55, 'cms-web-dev.yaml', 'dev', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/startdis_saas_cms?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-dev\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /app/startdis-saas/cms-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'd33ad2a526458ae44bc1b3368fc66cf5', '2022-11-07 17:07:42', '2022-11-30 18:52:06', 'nacos', '112.0.59.35', 'cms', 'dev', '内容管理', '', '', 'yaml', '', '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (60, 'application-public.yaml', 'public', '# 服务端口号\r\nserver:\r\n  # tomcat 配置\r\n  tomcat:\r\n    # tomcat的URI编码\r\n    uri-encoding: UTF-8\r\n    # tomcat最大线程数，默认为200\r\n    max-threads: 500\r\n    # Tomcat启动初始化的线程数，默认值25\r\n    min-spare-threads: 30\r\n\r\n# mybatis-plus\r\nmybatis-plus:\r\n  configuration:\r\n    #控制台打印完整带参数SQL语句\r\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\r\n  #mapper映射文件路径\r\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\r\n\r\n#pagehelper\r\npagehelper:\r\n  # helper-dialect: mysql\r\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\r\n  auto-runtime-dialect: true\r\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\r\n  reasonable: true\r\n  #支持通过Mapper接口参数传递page参数,默认值为false\r\n  support-methods-arguments: true\r\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\r\n  page-size-zero: true\r\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\r\n  params: count=countSql\r\n\r\n# feign\r\nfeign:\r\n  okhttp:\r\n    enabled: true\r\n  sentinel:\r\n    enabled: true\r\n  client:\r\n    config:\r\n      default:\r\n        connectTimeout: 100000\r\n        readTimeout: 100000\r\n\r\n# knife4j配置\r\nknife4j:\r\n  #启用\r\n  enable: true\r\n  #基础认证\r\n  basic:\r\n    enable: false\r\n    username: startdis\r\n    password: 123456\r\n  #增强配置\r\n  setting:\r\n    enableSwaggerModels: true\r\n    enableDocumentManage: true\r\n    enableHost: false\r\n    enableHostText: http://localhost\r\n    enableRequestCache: true\r\n    enableFilterMultipartApis: false\r\n    enableFilterMultipartApiMethodType: POST\r\n    language: zh-CN\r\n    enableFooter: false\r\n    enableFooterCustom: true\r\n    footerCustomContent: Copyright © 2021 Startdis All Rights Reserved\r\n\r\n# 定义日志类型\r\nlogback:\r\n  fileType: log\r\n\r\nspring:\r\n    # 循环依赖的问题\r\n  main:\r\n    allow-circular-references: true\r\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\r\n  mvc:\r\n    pathmatch:\r\n      matching-strategy: ANT_PATH_MATCHER', 'd37b051d1870895f0cb68e3d1167ba33', '2022-11-24 18:14:55', '2022-11-24 18:14:55', NULL, '192.168.1.6', 'sys', '', '系统管理', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (61, 'sys-web-public.yaml', 'public', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # mysql\n    # url: jdbc:mysql://1.13.24.182:3306/startdis-saas-sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    # driver-class-name: com.mysql.cj.jdbc.Driver\n    # username: root\n    # password: 123456\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/startdis_saas_sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-dev\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /app/startdis/startdis-saas/sys-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '170645d634d96ad00ec611d602bde1d0', '2022-11-24 18:14:55', '2022-11-24 18:14:55', NULL, '192.168.1.6', 'sys', '', '系统管理', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (62, 'cms-web-public.yaml', 'public', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # mysql\n    # url: jdbc:mysql://1.13.24.182:3306/startdis-saas-cms?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    # driver-class-name: com.mysql.cj.jdbc.Driver\n    # username: root\n    # password: 123456\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/startdis_saas_cms?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-dev\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /app/startdis-saas/cms-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '5aefc17121fc83dffea3197c809683fc', '2022-11-24 18:14:55', '2022-11-24 18:14:55', NULL, '192.168.1.6', 'cms', '', '内容管理', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (96, 'gateway-local.yaml', 'local', 'spring:\n  cloud:\n    # gateway 配置\n    gateway:\n      discovery:\n        locator:\n          #表明gateway开启服务注册和发现的功能，并且Spring cloud gateway自动根据服务发现为每一个服务创建了一个router，这个router将以服务名开头的请求路径转发到对应的服务\n          enabled: true\n          #是将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了\n          lowerCaseServiceId: true\n          #另一种写法\n          #lower-case-service-id: true\n      #路由配置\n      # routes:\n      #   - id: sys-web\n      #     uri: lb://sys-web\n      #     # uri: http://1.13.171.235:18081/\n      #     predicates:\n      #       - Path=/web-api/sys/**\n      #     filters:\n      #       - StripPrefix=2\n      #跨域设置\n      globalcors:\n        # 解决options请求被拦截问题\n        add-to-simple-url-handler-mapping: true\n        corsConfigurations:\n          \'[/**]\':\n            # 允许哪些网站的跨域请求 \n            allowedOriginPatterns: \"*\"\n            # 允许的跨域的请求方式\n            allowedMethods: \"*\"\n            # 允许在请求中携带的头信息\n            allowedHeaders: \"*\"\n            # 是否允许携带cookie\n            allowCredentials: true\n            # 这次跨域检测的有效期\n            maxAge: 360000\n\n# 安全配置\nsecurity:\n  # 不校验白名单\n  ignore:\n    urls:\n      - \"/springboot/user/login\"\n      - \"/springboot/user/register\"\n      - \"/springboot/v2/api-docs\"\n \n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: always\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-saas/gateway/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n\n', '6660ab7413a8b7442911daf0fda54ad0', '2022-12-11 18:32:52', '2022-12-12 21:16:53', 'nacos', '112.0.58.40', 'base', 'local', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (105, 'gateway-properties', 'local', '[{\n	\"id\": \"sys-web\",\n	\"uri\": \"lb://sys-web\",\n	\"predicates\": [{\n		\"name\": \"Path\",\n		\"args\": {\n			\"pattern\": \"/api/web/sys/**\"\n		}\n	}],\n	\"filters\": [{\n		\"name\": \"StripPrefix\",\n		\"args\": {\n			\"parts\": \"3\"\n		}\n	}]\n}]', '51f3ee1ea0dcfe5ab7b4e5d3505cae12', '2022-12-11 19:39:31', '2022-12-12 21:36:47', 'nacos', '112.0.58.40', 'base', 'local', '', '', '', 'json', '', '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (125, 'gateway-public.yaml', 'public', 'spring:\n  cloud:\n    # gateway 配置\n    gateway:\n      discovery:\n        locator:\n          #表明gateway开启服务注册和发现的功能，并且Spring cloud gateway自动根据服务发现为每一个服务创建了一个router，这个router将以服务名开头的请求路径转发到对应的服务\n          enabled: true\n          #是将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了\n          lowerCaseServiceId: true\n          #另一种写法\n          #lower-case-service-id: true\n      #路由配置\n      # routes:\n      #   - id: sys-web\n      #     uri: lb://sys-web\n      #     # uri: http://1.13.171.235:18081/\n      #     predicates:\n      #       - Path=/web-api/sys/**\n      #     filters:\n      #       - StripPrefix=2\n      #跨域设置\n      # globalcors:\n      #   corsConfigurations:\n      #     \'[/**]\':\n      #       allowedOriginPatterns: \"*\"\n      #       allowed-methods: \"*\"\n      #       allowed-headers: \"*\"\n      #       allow-credentials: true\n      #       exposedHeaders: \"Content-Disposition,Content-Type,Cache-Control\"\n\n# 安全配置\nsecurity:\n  # 不校验白名单\n  ignore:\n    urls:\n      - \"/springboot/user/login\"\n      - \"/springboot/user/register\"\n      - \"/springboot/v2/api-docs\"\n \n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: always\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-saas/gateway/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n\n', '210470f4d366ea6f346baf9085cd884d', '2022-12-12 19:12:13', '2022-12-12 19:12:13', NULL, '112.0.58.40', 'base', '', '', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (126, 'gateway-properties', 'public', '[{\n	\"id\": \"sys-web\",\n	\"uri\": \"lb://sys-web\",\n	\"predicates\": [{\n		\"name\": \"Path\",\n		\"args\": {\n			\"pattern\": \"/api/web/sys/**\"\n		}\n	}],\n	\"filters\": [{\n		\"name\": \"StripPrefix\",\n		\"args\": {\n			\"parts\": \"3\"\n		}\n	}]\n}]', '51f3ee1ea0dcfe5ab7b4e5d3505cae12', '2022-12-12 19:12:13', '2022-12-12 19:12:13', NULL, '112.0.58.40', 'base', '', '', NULL, NULL, 'json', NULL, '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (137, 'gateway-dev.yaml', 'dev', 'spring:\n  cloud:\n    # gateway 配置\n    gateway:\n      discovery:\n        locator:\n          #表明gateway开启服务注册和发现的功能，并且Spring cloud gateway自动根据服务发现为每一个服务创建了一个router，这个router将以服务名开头的请求路径转发到对应的服务\n          enabled: true\n          #是将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了\n          lowerCaseServiceId: true\n          #另一种写法\n          #lower-case-service-id: true\n      #路由配置\n      # routes:\n      #   - id: sys-web\n      #     uri: lb://sys-web\n      #     # uri: http://1.13.171.235:18081/\n      #     predicates:\n      #       - Path=/web-api/sys/**\n      #     filters:\n      #       - StripPrefix=2\n      #跨域设置\n      globalcors:\n        # 解决options请求被拦截问题\n        add-to-simple-url-handler-mapping: true\n        corsConfigurations:\n          \'[/**]\':\n            # 允许哪些网站的跨域请求 \n            allowedOriginPatterns: \"*\"\n            # 允许的跨域的请求方式\n            allowedMethods: \"*\"\n            # 允许在请求中携带的头信息\n            allowedHeaders: \"*\"\n            # 是否允许携带cookie\n            allowCredentials: true\n            # 这次跨域检测的有效期\n            maxAge: 360000\n\n# 安全配置\nsecurity:\n  # 不校验白名单\n  ignore:\n    urls:\n      - \"/springboot/user/login\"\n      - \"/springboot/user/register\"\n      - \"/springboot/v2/api-docs\"\n \n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: always\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-saas/gateway/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n\n', '6660ab7413a8b7442911daf0fda54ad0', '2022-12-12 20:01:32', '2022-12-12 21:19:19', 'nacos', '112.0.58.40', 'base', 'dev', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (138, 'gateway-properties', 'dev', '[{\n	\"id\": \"sys-web\",\n	\"uri\": \"lb://sys-web\",\n	\"predicates\": [{\n		\"name\": \"Path\",\n		\"args\": {\n			\"pattern\": \"/api/web/sys/**\"\n		}\n	}],\n	\"filters\": [{\n		\"name\": \"StripPrefix\",\n		\"args\": {\n			\"parts\": \"3\"\n		}\n	}]\n}]', '51f3ee1ea0dcfe5ab7b4e5d3505cae12', '2022-12-12 20:01:32', '2022-12-12 21:41:01', 'nacos', '112.0.58.40', 'base', 'dev', '', '', '', 'json', '', '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (169, 'application-dev.yaml', 'dev', '# 服务端口号\r\nserver:\r\n  # tomcat 配置\r\n  tomcat:\r\n    # tomcat的URI编码\r\n    uri-encoding: UTF-8\r\n    # tomcat最大线程数，默认为200\r\n    max-threads: 500\r\n    # Tomcat启动初始化的线程数，默认值25\r\n    min-spare-threads: 30\r\n\r\n# mybatis-plus\r\nmybatis-plus:\r\n  configuration:\r\n    #控制台打印完整带参数SQL语句\r\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\r\n  #mapper映射文件路径\r\n  mapper-locations: classpath*:/*-infra/src/main/resources/mapper/*.xml,classpath*:/common-log/src/main/resources/mapper/*.xml, classpath*:/mapper/**.xml\r\n\r\n#pagehelper\r\npagehelper:\r\n  # helper-dialect: mysql\r\n  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect 属性来指定分页插件使用哪种方言。\r\n  auto-runtime-dialect: true\r\n  #分页合理化参数，默认值为 false 。当该参数设置为 true 时， pageNum<=0 时会查询第一页， pageNum>pages （超过总数时），会查询最后一页。\r\n  reasonable: true\r\n  #支持通过Mapper接口参数传递page参数,默认值为false\r\n  support-methods-arguments: true\r\n  #默认值为 false ，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit =0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。\r\n  page-size-zero: true\r\n  #为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值\r\n  params: count=countSql\r\n\r\n# feign\r\nfeign:\r\n  okhttp:\r\n    enabled: true\r\n  sentinel:\r\n    enabled: true\r\n  client:\r\n    config:\r\n      default:\r\n        connectTimeout: 100000\r\n        readTimeout: 100000\r\n\r\n# knife4j配置\r\nknife4j:\r\n  #启用\r\n  enable: true\r\n  #基础认证\r\n  basic:\r\n    enable: false\r\n    username: startdis\r\n    password: 123456\r\n  #增强配置\r\n  setting:\r\n    enableSwaggerModels: true\r\n    enableDocumentManage: true\r\n    enableHost: false\r\n    enableHostText: http://localhost\r\n    enableRequestCache: true\r\n    enableFilterMultipartApis: false\r\n    enableFilterMultipartApiMethodType: POST\r\n    language: zh-CN\r\n    enableFooter: false\r\n    enableFooterCustom: true\r\n    footerCustomContent: Copyright © 2021 Startdis All Rights Reserved\r\n\r\n# 定义日志类型\r\nlogback:\r\n  fileType: log\r\n\r\nspring:\r\n    # 循环依赖的问题\r\n  main:\r\n    allow-circular-references: true\r\n  # MVC默认的路径匹配策略为PATH_PATTERN_PARSER，需要修改为ANT_PATH_MATCHER 解决swagger兼容性问题\r\n  mvc:\r\n    pathmatch:\r\n      matching-strategy: ANT_PATH_MATCHER', 'd37b051d1870895f0cb68e3d1167ba33', '2022-12-13 23:28:06', '2022-12-13 23:28:06', NULL, '112.0.61.56', 'sys', 'dev', '系统管理', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (170, 'sys-web-dev.yaml', 'dev', 'spring:\n  config:\n    activate:\n      on-profile: dev\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # mysql\n    # url: jdbc:mysql://1.13.24.182:3306/startdis-saas-sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    # driver-class-name: com.mysql.cj.jdbc.Driver\n    # username: root\n    # password: 123456\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/startdis_saas_sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-dev\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /app/logs/startdis/startdis-saas/sys-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'c7508812a0b02e95efb49c37e7e9dbe7', '2022-12-13 23:28:06', '2022-12-19 17:02:42', 'nacos', '180.110.29.95', 'sys', 'dev', '系统管理', '', '', 'yaml', '', '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (173, 'startdis-web-local.yaml', 'local', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # mysql\n    # url: jdbc:mysql://1.13.24.182:3306/startdis-saas-sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    # driver-class-name: com.mysql.cj.jdbc.Driver\n    # username: root\n    # password: 123456\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/startdis_saas_sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-saas/sys-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '14633217d5729ece2a9745f489634fb0', '2022-12-16 19:17:48', '2022-12-16 19:17:48', NULL, '112.0.58.132', 'sys', 'local', '系统管理', NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (174, 'ydsz-fam-local.yaml', 'local', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/ydsz_fam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /login,/logout\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/ydsz/ydsz-epiboly/ydsz-fam/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '71890da064f544912d2fbe501afa0893', '2022-12-19 13:26:29', '2023-01-19 18:44:58', 'nacos', '112.32.249.127', 'sys', 'local', '系统管理', '', '', 'yaml', '', '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (178, 'ydsz-fam-dev.yaml', 'dev', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/ydsz_fam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /app/logs/ydsz/ydsz-epiboly/ydsz-fam/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '8c37025f10c0b40b1130848f1b5c1ab3', '2022-12-19 17:02:00', '2022-12-19 17:03:02', 'nacos', '180.110.29.95', 'sys', 'dev', '系统管理', '', '', 'yaml', '', '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (182, 'a4-portal-web-local.yaml', 'local', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/startdis-a4-portal?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.110\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /login,/logout,/oauth2/authorize,/oauth2/token,/oauth2/check,/oauth2/callback\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'c6edf2e39d8b18d9a50dde65cdaea1f6', '2023-01-12 15:59:28', '2023-01-20 14:45:12', 'nacos', '192.168.0.111', 'sys', 'local', '门户管理', '', '', 'yaml', '', '');
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES (197, 'yun-sso-web-local.yaml', 'local', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/dianjiu-yun-sso?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.110\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /login,/logout,/oauth2/authorize,/oauth2/token,/oauth2/check,/oauth2/callback,/getUserInfo\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'e8c2c57d91a9857c7271f42d9a5a0e67', '2023-01-20 17:00:10', '2023-01-20 23:20:23', 'nacos', '192.168.0.111', 'yun', 'local', '单点登录', '', '', 'yaml', '', '');
COMMIT;

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `uk_configinfoaggr_datagrouptenantdatum` (`data_id`,`group_id`,`tenant_id`,`datum_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin ROW_FORMAT=DYNAMIC COMMENT='增加租户字段';

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------
BEGIN;
COMMIT;

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '秘钥',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `uk_configinfobeta_datagrouptenant` (`data_id`,`group_id`,`tenant_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin ROW_FORMAT=DYNAMIC COMMENT='config_info_beta';

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------
BEGIN;
COMMIT;

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `uk_configinfotag_datagrouptenanttag` (`data_id`,`group_id`,`tenant_id`,`tag_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin ROW_FORMAT=DYNAMIC COMMENT='config_info_tag';

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------
BEGIN;
COMMIT;

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation` (
  `id` bigint NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE KEY `uk_configtagrelation_configidtag` (`id`,`tag_name`,`tag_type`) USING BTREE,
  KEY `idx_tenant_id` (`tenant_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin ROW_FORMAT=DYNAMIC COMMENT='config_tag_relation';

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------
BEGIN;
COMMIT;

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int unsigned NOT NULL DEFAULT '0' COMMENT '配额，0表示使用默认值',
  `usage` int unsigned NOT NULL DEFAULT '0' COMMENT '使用量',
  `max_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int unsigned NOT NULL DEFAULT '0' COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int unsigned NOT NULL DEFAULT '0' COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `uk_group_id` (`group_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin ROW_FORMAT=DYNAMIC COMMENT='集群、各Group容量信息表';

-- ----------------------------
-- Records of group_capacity
-- ----------------------------
BEGIN;
COMMIT;

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info` (
  `id` bigint unsigned NOT NULL,
  `nid` bigint unsigned NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin,
  `src_ip` varchar(20) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '秘钥',
  PRIMARY KEY (`nid`) USING BTREE,
  KEY `idx_gmt_create` (`gmt_create`) USING BTREE,
  KEY `idx_gmt_modified` (`gmt_modified`) USING BTREE,
  KEY `idx_did` (`data_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=233 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin ROW_FORMAT=DYNAMIC COMMENT='多租户改造';

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
BEGIN;
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (0, 209, 'portal-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # mysql\n    # url: jdbc:mysql://1.13.24.182:3306/startdis-saas-sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    # driver-class-name: com.mysql.cj.jdbc.Driver\n    # username: root\n    # password: 123456\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/startdis_saas_sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-saas/sys-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '14633217d5729ece2a9745f489634fb0', '2010-05-05 00:00:00', '2023-01-12 15:58:32', NULL, '112.32.248.102', 'I', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (0, 210, 'a4-portal-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # mysql\n    # url: jdbc:mysql://1.13.24.182:3306/startdis-saas-sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    # driver-class-name: com.mysql.cj.jdbc.Driver\n    # username: root\n    # password: 123456\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/startdis_saas_sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-saas/sys-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '14633217d5729ece2a9745f489634fb0', '2010-05-05 00:00:00', '2023-01-12 15:59:28', NULL, '112.32.248.102', 'I', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (182, 211, 'a4-portal-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # mysql\n    # url: jdbc:mysql://1.13.24.182:3306/startdis-saas-sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    # driver-class-name: com.mysql.cj.jdbc.Driver\n    # username: root\n    # password: 123456\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/startdis_saas_sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-saas/sys-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '14633217d5729ece2a9745f489634fb0', '2010-05-05 00:00:00', '2023-01-12 16:00:29', 'nacos', '112.32.248.102', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (182, 212, 'a4-portal-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # mysql\n    # url: jdbc:mysql://1.13.24.182:3306/startdis-saas-sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    # driver-class-name: com.mysql.cj.jdbc.Driver\n    # username: root\n    # password: 123456\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/startdis-a4-portal?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-saas/sys-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '530bcf253491a052691379375db56edc', '2010-05-05 00:00:00', '2023-01-12 19:36:00', 'nacos', '112.32.248.102', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (182, 213, 'a4-portal-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # mysql\n    # url: jdbc:mysql://1.13.24.182:3306/startdis-saas-sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    # driver-class-name: com.mysql.cj.jdbc.Driver\n    # username: root\n    # password: 123456\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/startdis-a4-portal?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'ff1b7be99b7ce77be22edbe296c5b0f7', '2010-05-05 00:00:00', '2023-01-13 16:54:54', 'nacos', '112.32.250.55', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (174, 214, 'ydsz-fam-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 100MB\n      # 单个文件的最大值\n      max-file-size: 100MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/ydsz_fam?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/ydsz/ydsz-epiboly/ydsz-fam/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'effb912d20dd1db649b58ecd41ecc203', '2010-05-05 00:00:00', '2023-01-19 18:44:58', 'nacos', '112.32.249.127', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (181, 215, 'portal-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # mysql\n    # url: jdbc:mysql://1.13.24.182:3306/startdis-saas-sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    # driver-class-name: com.mysql.cj.jdbc.Driver\n    # username: root\n    # password: 123456\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/startdis_saas_sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-saas/sys-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '14633217d5729ece2a9745f489634fb0', '2010-05-05 00:00:00', '2023-01-20 00:44:39', 'nacos', '192.168.0.111', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (182, 216, 'a4-portal-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://127.0.0.1:5432/startdis-a4-portal?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 127.0.0.1\n    password:\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://127.0.0.1:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 127.0.0.1\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: d:/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '4e33d11fe77ebc17997f1e8eaec197ec', '2010-05-05 00:00:00', '2023-01-20 00:48:58', 'nacos', '192.168.0.111', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (182, 217, 'a4-portal-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/startdis-a4-portal?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.110\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: d:/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '8b46601fbd61e0ffc03542ae4e2ac8b3', '2010-05-05 00:00:00', '2023-01-20 00:52:06', 'nacos', '192.168.0.111', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (181, 218, 'portal-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # mysql\n    # url: jdbc:mysql://1.13.24.182:3306/startdis-saas-sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    # driver-class-name: com.mysql.cj.jdbc.Driver\n    # username: root\n    # password: 123456\n    # postgresql\n    url: jdbc:postgresql://1.13.24.182:5432/startdis_saas_sys?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 1.13.24.182\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://1.13.24.182:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\njco:\n  client:\n    # SAP服务器\n    ashost: 1.13.24.182\n    # SAP系统编号\n    sysnr: 00\n    # SAP集团\n    client: 100\n    # SAP用户\n    user:   ST01_ADMIN\n    # SAP密码\n    passwd: startdis2022\n    # SAP语言\n    lang: EN\n  destination:\n    # 最大连接数\n    peakLimit: 10\n    # 最大连接线程\n    poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-saas/sys-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'b53427d88b69ae4b18db1f974e859bc9', '2010-05-05 00:00:00', '2023-01-20 00:58:57', NULL, '192.168.0.111', 'D', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (182, 219, 'a4-portal-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/startdis-a4-portal?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.110\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: d:/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '8b46601fbd61e0ffc03542ae4e2ac8b3', '2010-05-05 00:00:00', '2023-01-20 01:00:17', 'nacos', '192.168.0.111', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (182, 220, 'a4-portal-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/startdis-a4-portal?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.110\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '86e486eff084c8d98ad6084c510609cf', '2010-05-05 00:00:00', '2023-01-20 01:05:45', 'nacos', '192.168.0.111', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (182, 221, 'a4-portal-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/startdis-a4-portal?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.1\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'ac1ffff71b511e0afa63f6ed0bc3ae5d', '2010-05-05 00:00:00', '2023-01-20 01:09:58', 'nacos', '192.168.0.111', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (182, 222, 'a4-portal-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/startdis-a4-portal?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.1\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'ac1ffff71b511e0afa63f6ed0bc3ae5d', '2010-05-05 00:00:00', '2023-01-20 01:10:27', 'nacos', '192.168.0.111', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (182, 223, 'a4-portal-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/startdis-a4-portal?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.110\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '86e486eff084c8d98ad6084c510609cf', '2010-05-05 00:00:00', '2023-01-20 13:54:01', 'nacos', '192.168.0.111', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (182, 224, 'a4-portal-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/startdis-a4-portal?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.110\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /login,/logout,/oauth2/authorize,/oauth2/token,/oauth2/check,/oauth2/callback\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'c6edf2e39d8b18d9a50dde65cdaea1f6', '2010-05-05 00:00:00', '2023-01-20 14:44:05', 'nacos', '192.168.0.111', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (182, 225, 'a4-portal-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/startdis-a4-portal?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.110\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /login,/logout,/oauth2/authorize,/oauth2/token,/oauth2/check,/oauth2/cellback\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'd9e279c7d90eff5e8761000d48936b33', '2010-05-05 00:00:00', '2023-01-20 14:45:12', 'nacos', '192.168.0.111', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (0, 226, 'yun-sso-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/startdis-a4-portal?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.110\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /login,/logout,/oauth2/authorize,/oauth2/token,/oauth2/check,/oauth2/callback\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'c6edf2e39d8b18d9a50dde65cdaea1f6', '2010-05-05 00:00:00', '2023-01-20 17:00:10', NULL, '192.168.0.111', 'I', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (197, 227, 'yun-sso-web-local.yaml', 'local', 'sys', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/startdis-a4-portal?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.110\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /login,/logout,/oauth2/authorize,/oauth2/token,/oauth2/check,/oauth2/callback\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'c6edf2e39d8b18d9a50dde65cdaea1f6', '2010-05-05 00:00:00', '2023-01-20 17:00:35', 'nacos', '192.168.0.111', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (197, 228, 'yun-sso-web-local.yaml', 'local', 'yun', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/startdis-a4-portal?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.110\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /login,/logout,/oauth2/authorize,/oauth2/token,/oauth2/check,/oauth2/callback\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'c6edf2e39d8b18d9a50dde65cdaea1f6', '2010-05-05 00:00:00', '2023-01-20 17:46:07', 'nacos', '192.168.0.111', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (197, 229, 'yun-sso-web-local.yaml', 'local', 'yun', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/dianjiu-yun-sso?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.110\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /login,/logout,/oauth2/authorize,/oauth2/token,/oauth2/check,/oauth2/callback\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'df4a251e6cbe01eaaba3544f97973d94', '2010-05-05 00:00:00', '2023-01-20 17:46:54', 'nacos', '192.168.0.111', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (197, 230, 'yun-sso-web-local.yaml', 'local', 'yun', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/dianjiu-yun-sso?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.110\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /login,/logout,/oauth2/authorize,/oauth2/token,/oauth2/check,/oauth2/callback\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'df4a251e6cbe01eaaba3544f97973d94', '2010-05-05 00:00:00', '2023-01-20 23:19:15', 'nacos', '192.168.0.111', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (197, 231, 'yun-sso-web-local.yaml', 'local', 'yun', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/dianjiu-yun-sso?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.110\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /login,/logout,/oauth2/authorize,/oauth2/token,/oauth2/check,/oauth2/callback,/oauth2/getUserInfo\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', '3aadd7905d0a76d245e662bc5fad0e46', '2010-05-05 00:00:00', '2023-01-20 23:20:10', 'nacos', '192.168.0.111', 'U', 'local', '');
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES (197, 232, 'yun-sso-web-local.yaml', 'local', 'yun', 'spring:\n  config:\n    activate:\n      on-profile: local\n  servlet:\n    multipart:\n      # 上传文件总的最大值\n      max-request-size: 10MB\n      # 单个文件的最大值\n      max-file-size: 10MB\n  datasource:\n    # postgresql\n    url: jdbc:postgresql://192.168.0.110:5432/dianjiu-yun-sso?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&nullCatalogMeansCurrent=true\n    driver-class-name: org.postgresql.Driver\n    username: postgres\n    password: 123456\n    type: com.alibaba.druid.pool.DruidDataSource\n    # 下面为连接池的补充设置，应用到上面所有数据源中\n    # 初始化大小，最小，最大\n    initial-size: 5\n    min-idle: 5\n    max-active: 20\n    # 配置获取连接等待超时的时间\n    max-wait: 60000\n    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n    time-between-eviction-runs-millis: 60000\n    # 配置一个连接在池中最小生存的时间，单位是毫秒\n    min-evictable-idle-time-millis: 300000\n    # mysql\n    # validation-query: SELECT 1 FROM DUAL\n    # postgre\n    validation-query: SELECT 1\n    test-while-idle: true\n    test-on-borrow: false\n    test-on-return: false\n    # 打开PSCache，并且指定每个连接上PSCache的大小\n    pool-prepared-statements: true\n    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    max-pool-prepared-statement-per-connection-size: 20\n    filters: stat,wall\n    use-global-data-source-stat: true\n    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录\n    connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000\n  redis:\n    database: 0\n    host: 192.168.0.110\n    password: 123456\n    port: 6379\n    jedis:\n      pool:\n        max-active: 8\n        max-idle: 8\n        min-idle: 0\n        timeout: 1000\n# 异步线程配置\nasync:\n  executor:\n    thread:\n      # 核心线程数\n      corePoolSize: 10\n      # 最大线程数\n      maxPoolSize: 20\n      # 任务队列大小\n      queueCapacity: 1000\n      # 缓冲队列中线程的空闲时间\n      keepAliveSeconds: 300\n# MinIO\nminio:\n  #对象存储服务的URL\n  url: http://192.168.0.110:9000\n  #账户\n  accessKey: startdis\n  #密码\n  secretKey: startdis2022\n  #存储桶\n  bucketName: startdis-saas-local\n# SAP RFC配置\n# jco:\n  # client:\n    # SAP服务器\n    # ashost: 127.0.0.1\n    # SAP系统编号\n    # sysnr: 00\n    # SAP集团\n    # client: 100\n    # SAP用户\n    # user:   ST01_ADMIN\n    # SAP密码\n    # passwd: startdis2022\n    # SAP语言\n    # lang: EN\n  # destination:\n    # 最大连接数\n    # peakLimit: 10\n    # 最大连接线程\n    # poolCapacity: 30\n\n# 拦截器\nsql-intercept:\n  tenant: \n    groupTenant: \n      enable: true\n    companyTenant: \n      enable: true\n    anonUrlSet: /login,/logout,/oauth2/authorize,/oauth2/token,/oauth2/check,/oauth2/callback,/getUserInfo\n  field-fill:\n    createdByIntercept:\n      enable: true\n    updateByIntercept:\n      enable: true\n    createAtIntercept:\n      enable: true\n    updateAtIntercept:\n      enable: true\n\n## 开启店铺id 拦截器\ninterceptor:\n  company:\n    enabled: true\n\n# 开启系统操作日志\nlog:\n  record:\n    enabled: true\n# 日志输出路径配置\nlogback:\n  logDir: /Users/dianjiu/DevLogs/startdis/startdis-a4-saas/portal-web/\n# 定义日志输出级别\nlogging:\n  level:\n    com.scm: info\n    #spring 包日志输出级别\n    org.springframework: info\n    com.alibaba.cloud: info\n    # undertow\n    io.undertow: info\n    # mybatis-plus\n    com.baomidou.mybatisplus: debug\n    com.scm.scheduling.infra.mapper: debug\n', 'e8c2c57d91a9857c7271f42d9a5a0e67', '2010-05-05 00:00:00', '2023-01-20 23:20:23', 'nacos', '192.168.0.111', 'U', 'local', '');
COMMIT;

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions` (
  `role` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL,
  `resource` varchar(512) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL,
  UNIQUE KEY `uk_role_permission` (`role`,`resource`,`action`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 ROW_FORMAT=DYNAMIC;

-- ----------------------------
-- Records of permissions
-- ----------------------------
BEGIN;
COMMIT;

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles` (
  `username` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL,
  UNIQUE KEY `uk_username_role` (`username`,`role`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 ROW_FORMAT=DYNAMIC;

-- ----------------------------
-- Records of roles
-- ----------------------------
BEGIN;
INSERT INTO `roles` (`username`, `role`) VALUES ('nacos', 'ROLE_ADMIN');
COMMIT;

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int unsigned NOT NULL DEFAULT '0' COMMENT '配额，0表示使用默认值',
  `usage` int unsigned NOT NULL DEFAULT '0' COMMENT '使用量',
  `max_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int unsigned NOT NULL DEFAULT '0' COMMENT '聚合子配置最大个数',
  `max_aggr_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int unsigned NOT NULL DEFAULT '0' COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `uk_tenant_id` (`tenant_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin ROW_FORMAT=DYNAMIC COMMENT='租户容量信息表';

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------
BEGIN;
COMMIT;

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `uk_tenant_info_kptenantid` (`kp`,`tenant_id`) USING BTREE,
  KEY `idx_tenant_id` (`tenant_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin ROW_FORMAT=DYNAMIC COMMENT='tenant_info';

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
BEGIN;
INSERT INTO `tenant_info` (`id`, `kp`, `tenant_id`, `tenant_name`, `tenant_desc`, `create_source`, `gmt_create`, `gmt_modified`) VALUES (14, '1', 'local', 'local', '本地开发环境', 'nacos', 1660455306585, 1660455306585);
INSERT INTO `tenant_info` (`id`, `kp`, `tenant_id`, `tenant_name`, `tenant_desc`, `create_source`, `gmt_create`, `gmt_modified`) VALUES (15, '1', 'dev', 'dev', '开发联调环境', 'nacos', 1660457306585, 1667296526438);
INSERT INTO `tenant_info` (`id`, `kp`, `tenant_id`, `tenant_name`, `tenant_desc`, `create_source`, `gmt_create`, `gmt_modified`) VALUES (16, '1', 'fat', 'fat', '功能测试环境', 'nacos', 1660457325340, 1667296535302);
INSERT INTO `tenant_info` (`id`, `kp`, `tenant_id`, `tenant_name`, `tenant_desc`, `create_source`, `gmt_create`, `gmt_modified`) VALUES (17, '1', 'sit', 'sit', '集成测试环境', 'nacos', 1660457356297, 1667296542854);
INSERT INTO `tenant_info` (`id`, `kp`, `tenant_id`, `tenant_name`, `tenant_desc`, `create_source`, `gmt_create`, `gmt_modified`) VALUES (18, '1', 'uat', 'uat', '演示验收环境', 'nacos', 1660457375281, 1667296575700);
INSERT INTO `tenant_info` (`id`, `kp`, `tenant_id`, `tenant_name`, `tenant_desc`, `create_source`, `gmt_create`, `gmt_modified`) VALUES (19, '1', 'pre', 'pre', '灰度发布环境', 'nacos', 1660457390105, 1667296582450);
INSERT INTO `tenant_info` (`id`, `kp`, `tenant_id`, `tenant_name`, `tenant_desc`, `create_source`, `gmt_create`, `gmt_modified`) VALUES (20, '1', 'pro', 'pro', '生产正式环境', 'nacos', 1660457404889, 1667296593435);
COMMIT;

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `username` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 ROW_FORMAT=DYNAMIC;

-- ----------------------------
-- Records of users
-- ----------------------------
BEGIN;
INSERT INTO `users` (`username`, `password`, `enabled`) VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);
INSERT INTO `users` (`username`, `password`, `enabled`) VALUES ('nacos_admin', '$2a$10$EQRcSc1kmYkx6w2duyYXrO06i47HAPS9xaNL4Pj64xpM0akdHbYOy', 1);
COMMIT;

SET FOREIGN_KEY_CHECKS = 1;
